"use strict";(()=>{var e={};e.id=2080,e.ids=[2080],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},93527:(e,t,r)=>{r.r(t),r.d(t,{config:()=>S,default:()=>g,routeModule:()=>f});var n={};r.r(n),r.d(n,{default:()=>y});var a=r(71802),i=r(47153),o=r(56249),s=r(39352),d=r(16374),u=r(15284),m=r(18606),c=r(76319),p=r(90435),l=r(55895);let y=(0,m.Q)(async function(e,t){if("POST"!==e.method)return t.status(405).json({success:!1,message:"Method not allowed"});try{await (0,s.Z)();let{team_name:r,tournament_id:n,user_ids:a,payment_method:i,payment_token:o}=e.body,m=await c.Z.findById(n);if(!m)return t.status(404).json({success:!1,message:"Tournament not found"});if("Registration Open"!==m.status)return t.status(404).json({success:!1,message:"Tournament Registration closed"});let y=await d.Z.create({name:r,tournament:n,members:a}),g=await u.Z.create({tournament:n,team:y._id,organizer:e.user.id});if(a&&a.length>0)for(let t of(await l.Z.find({type:"reminder",enabled:!0,userId:{$in:a}})))await p.Z.create({recipient:t.userId,type:"reminder",title:`${e.user.name} invited you on ${m.name} tournament`,relatedId:m._id,status:"accepted"});t.status(201).json({success:!0,data:{team_id:y._id,registration_id:g._id}})}catch(e){if(11e3===e.code)return t.status(400).json({success:!1,message:"Team name already exists"});t.status(500).json({success:!1,message:e.message})}}),g=(0,o.l)(n,"default"),S=(0,o.l)(n,"config"),f=new a.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/tournaments/register",pathname:"/api/tournaments/register",bundlePath:"",filename:""},userland:n})},39352:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(11185),a=r.n(n);let i="mongodb+srv://nolantapps:oCOt2NNcEQKUZcuj@impacto-cluster.s20zbjj.mongodb.net/axiom?retryWrites=true&w=majority";if(!i)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let s=async function(){if(o.conn)return o.conn;o.promise||(o.promise=a().connect(i,{bufferCommands:!0}));try{return o.conn=await o.promise,console.log("MongoDB Connected Successfully"),o.conn}catch(e){throw o.promise=null,console.error("MongoDB Connection Error:",e),e}}},18606:(e,t,r)=>{r.d(t,{Q:()=>a});let n=require("next-auth/jwt");function a(e){return async(t,r)=>{let a=await (0,n.getToken)({req:t,secret:process.env.JWT_SECRET});return a?(t.user=a,e(t,r)):r.status(401).json({success:!1,message:"Not authenticated"})}}},90435:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(11185),a=r.n(n);let i=new(a()).Schema({recipient:{type:a().Schema.Types.ObjectId,ref:"User",required:!0},type:{type:String,enum:["friend_request","tournament","announcement","reminder","message"],required:!0},title:{type:String,required:!0},description:String,isRead:{type:Boolean,default:!1},status:{type:String,enum:["pending","accepted","rejected"],default:"pending"},relatedId:{type:a().Schema.Types.ObjectId,required:!0},createdAt:{type:Date,default:Date.now}}),o=a().models.Notification||a().model("Notification",i)},55895:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(11185),a=r.n(n);let i=new(a()).Schema({userId:{type:a().Schema.Types.ObjectId,ref:"User",required:!0},module:{type:String,required:!0},type:{type:String,required:!0},enabled:{type:Boolean,default:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}}),o=a().models.Settings||a().model("Settings",i)},16374:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(11185),a=r.n(n);let i=new(a()).Schema({name:{type:String,required:!0,unique:!0},members:[{type:a().Schema.Types.ObjectId,ref:"User"}],createdAt:{type:Date,default:Date.now}}),o=a().models.Team||a().model("Team",i)},76319:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(11185),a=r.n(n);let i=new(a()).Schema({name:{type:String,required:!0},type:{type:String,required:!0},game:{type:String,required:!0},platform:{type:String,required:!0},gameMode:{type:String,required:!0},teamSize:{type:String,required:!0},date:{type:String,required:!0},time:{type:String,required:!0},end:{type:String,required:!0},entryFee:{type:String,required:!0},category:{type:String,required:!0},restrictions:{type:String,required:!0},hasLimit:{type:String,required:!0},limit:{type:String},description:{type:String,required:!0},attributes:{type:String,required:!0},totalPrizePool:{type:String,required:!0},winnerCount:{type:Number,required:!0},prizeSplit:[Number],paymentMethod:{type:String,required:!0},images:[{type:String}],status:{type:String,required:!0}},{timestamps:!0}),o=a().models.Tournament||a().model("Tournament",i)},15284:(e,t,r)=>{r.d(t,{Z:()=>u});var n=r(11185),a=r.n(n),i=r(16374);let o=new(a()).Schema({userId:{type:a().Schema.Types.ObjectId,ref:"User",required:!0},paymentStatus:{type:String,enum:["pending","completed"],default:"pending"},paymentToken:String,paymentMethod:String,paidAt:Date}),s=new(a()).Schema({userId:{type:a().Schema.Types.ObjectId,ref:"User",required:!0},score:{type:String,default:0}}),d=new(a()).Schema({tournament:{type:a().Schema.Types.ObjectId,ref:"Tournament",required:!0},organizer:{type:a().Schema.Types.ObjectId,ref:"User",required:!0},team:{type:a().Schema.Types.ObjectId,ref:i.Z,required:!0},memberPayments:[o],beforeTournamentScore:[s],afterTournamentScore:[s],createdAt:{type:Date,default:Date.now}}),u=a().models.TournamentRegistration||a().model("TournamentRegistration",d)},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=93527);module.exports=r})();