"use strict";(()=>{var e={};e.id=7232,e.ids=[7232],e.modules={46486:e=>{e.exports=require("fortnite-api-io")},11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},78311:e=>{e.exports=require("node-cron")},36705:e=>{e.exports=import("formidable")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},38118:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>m,default:()=>d,routeModule:()=>c});var n=r(71802),o=r(47153),s=r(56249),i=r(5915),u=e([i]);i=(u.then?(await u)():u)[0];let d=(0,s.l)(i,"default"),m=(0,s.l)(i,"config"),c=new n.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/tournaments",pathname:"/api/tournaments",bundlePath:"",filename:""},userland:i});a()}catch(e){a(e)}})},39352:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(11185),n=r.n(a);let o="mongodb+srv://nolantapps:oCOt2NNcEQKUZcuj@impacto-cluster.s20zbjj.mongodb.net/axiom?retryWrites=true&w=majority";if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let s=global.mongoose;s||(s=global.mongoose={conn:null,promise:null});let i=async function(){if(s.conn)return s.conn;s.promise||(s.promise=n().connect(o,{bufferCommands:!0}));try{return s.conn=await s.promise,console.log("MongoDB Connected Successfully"),s.conn}catch(e){throw s.promise=null,console.error("MongoDB Connection Error:",e),e}}},18606:(e,t,r)=>{r.d(t,{Q:()=>n});let a=require("next-auth/jwt");function n(e){return async(t,r)=>{let n=await (0,a.getToken)({req:t,secret:process.env.JWT_SECRET});return n?(t.user=n,e(t,r)):r.status(401).json({success:!1,message:"Not authenticated"})}}},90435:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({recipient:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},type:{type:String,enum:["friend_request","tournament","announcement","reminder","message"],required:!0},title:{type:String,required:!0},description:String,isRead:{type:Boolean,default:!1},status:{type:String,enum:["pending","accepted","rejected"],default:"pending"},relatedId:{type:n().Schema.Types.ObjectId,required:!0},createdAt:{type:Date,default:Date.now}}),s=n().models.Notification||n().model("Notification",o)},88631:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({userId:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},platformType:{type:String,required:!0,enum:["pubg","fortnite","valorant"]},accountId:{type:String,required:!0},username:{type:String,required:!0}},{timestamps:!0}),s=n().models.Platform||n().model("Platform",o)},55895:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({userId:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},module:{type:String,required:!0},type:{type:String,required:!0},enabled:{type:Boolean,default:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}}),s=n().models.Settings||n().model("Settings",o)},16374:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({name:{type:String,required:!0,unique:!0},members:[{type:n().Schema.Types.ObjectId,ref:"User"}],createdAt:{type:Date,default:Date.now}}),s=n().models.Team||n().model("Team",o)},76319:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({name:{type:String,required:!0},type:{type:String,required:!0},game:{type:String,required:!0},platform:{type:String,required:!0},gameMode:{type:String,required:!0},teamSize:{type:String,required:!0},date:{type:String,required:!0},time:{type:String,required:!0},end:{type:String,required:!0},entryFee:{type:String,required:!0},category:{type:String,required:!0},restrictions:{type:String,required:!0},hasLimit:{type:String,required:!0},limit:{type:String},description:{type:String,required:!0},attributes:{type:String,required:!0},totalPrizePool:{type:String,required:!0},winnerCount:{type:Number,required:!0},prizeSplit:[Number],paymentMethod:{type:String,required:!0},images:[{type:String}],status:{type:String,required:!0}},{timestamps:!0}),s=n().models.Tournament||n().model("Tournament",o)},39839:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(11185),n=r.n(a);let o=new(n()).Schema({userId:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},score:{type:Number,default:0,required:!0},kills:{type:Number,default:0,required:!0},kd:{type:Number,default:0,required:!0},deaths:{type:Number,default:0,required:!0}}),s=new(n()).Schema({registerTorunamentId:{type:n().Schema.Types.ObjectId,ref:"TournamentRegistration",required:!0},tournament:{type:n().Schema.Types.ObjectId,ref:"Tournament",required:!0},team:{type:n().Schema.Types.ObjectId,ref:"Team",required:!0},stats:[o],totalScore:{type:Number,default:0},ranking:Number,createdAt:{type:Date,default:Date.now}}),i=n().models.TournamentHistory||n().model("TournamentHistory",s)},15050:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({userId:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},amount:{type:Number,required:!0},registerTorunamentId:{type:n().Schema.Types.ObjectId,ref:"TournamentRegistration",required:!0},tournament:{type:n().Schema.Types.ObjectId,ref:"Tournament",required:!0},team:{type:n().Schema.Types.ObjectId,ref:"Team",required:!0},paymentMethod:{type:String,default:"wallet"},createdAt:{type:Date,default:Date.now}}),s=n().models.TournamentPrize||n().model("TournamentPrize",o)},15284:(e,t,r)=>{r.d(t,{Z:()=>d});var a=r(11185),n=r.n(a),o=r(16374);let s=new(n()).Schema({userId:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},paymentStatus:{type:String,enum:["pending","completed"],default:"pending"},paymentToken:String,paymentMethod:String,paidAt:Date}),i=new(n()).Schema({userId:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},score:{type:String,default:0}}),u=new(n()).Schema({tournament:{type:n().Schema.Types.ObjectId,ref:"Tournament",required:!0},organizer:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},team:{type:n().Schema.Types.ObjectId,ref:o.Z,required:!0},memberPayments:[s],beforeTournamentScore:[i],afterTournamentScore:[i],createdAt:{type:Date,default:Date.now}}),d=n().models.TournamentRegistration||n().model("TournamentRegistration",u)},70971:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(11185),n=r.n(a);let o=new(n()).Schema({name:{type:String,required:!0},walletBalance:{type:Number,default:0},stripeConnectId:{type:String,default:null},stripeAccountStatus:{type:String,enum:["pending","active","rejected","restricted"],default:"pending"},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},role:{type:String,enum:["Admin","User","Agent","Super"],default:"User"},cName:String,profileImage:{type:String,required:!1},friends:[{type:n().Schema.Types.ObjectId,ref:"User"}],createdAt:{type:Date,default:Date.now}}),s=n().models.User||n().model("User",o)},5915:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>I,default:()=>j});var n=r(39352),o=r(76319),s=r(15284),i=r(11185),u=r.n(i),d=r(36705),m=r(78311),c=r.n(m),l=r(40644),p=r(88631),y=r(46486),g=r.n(y),f=r(70971),S=r(18606),h=r(39839),w=r(15050),b=r(55895),T=r(90435),q=e([d]);d=(q.then?(await q)():q)[0];let I={api:{bodyParser:!1}},j=(0,S.Q)(async function(e,t){if(!process.env.MONGODB_URI)return t.status(500).json({success:!1,message:"MongoDB URI not configured"});let r=new(g())(process.env.FORTNITE_API_KEY,{defaultLanguage:"en",ignoreWarnings:!1}),a=async(e,t)=>{let a=await s.Z.find({tournament:e}).populate("tournament"),n=[];for(let e of a){let a=[],o=[];for(let t of e.memberPayments)try{let n=await p.Z.findOne({userId:t.userId}).select("accountId");if(n){let s=await r.getGlobalPlayerStats(n.accountId);if(s.result){let r=s.global_stats[e.tournament.teamSize.toLowerCase()];r&&(a.push({score:r.score,userId:t.userId}),o.push({score:r.score,userId:t.userId,kills:r.kills,kd:r.kd,deaths:Math.round(r.kills/r.kd)}))}}}catch(e){console.error(`Error fetching data for user ${t.userId}:`,e)}e[t]=a;let s=await e.save();if("afterTournamentScore"===t){let e=()=>s.afterTournamentScore.reduce((e,t)=>e+parseInt(t.score),0);n.push({registerTorunamentId:s._id,tournament:s.tournament._id,team:s.team,stats:o,totalScore:e()})}}n.sort((e,t)=>t.totalScore-e.totalScore).forEach(async(e,t)=>{let r=a[0].tournament.prizeSplit[t];r&&e.stats.forEach(async t=>{let a=await f.Z.findById(t.userId);a&&(a.walletBalance+=r/e.stats.length,await a.save(),await w.Z.create({tournament:e.tournament,team:e.team,amount:r/e.stats.length,userId:t.userId,registerTorunamentId:e.registerTorunamentId,paymentMethod:"wallet"}))}),await h.Z.create({...e,ranking:t+1})})};try{if(await (0,n.Z)(),"POST"===e.method)try{let r=(0,d.default)({multiples:!0,uploadDir:"./public/uploads",keepExtensions:!0}),[n,s]=await new Promise((t,a)=>{r.parse(e,(e,r,n)=>{e&&a(e),t([r,n])})}),i=Object.values(s).map(e=>`/uploads/${e[0].newFilename}`),u=n.prizeSplit,m=[];if(u){if("string"==typeof u)try{m=JSON.parse(u)}catch(e){console.error("Error parsing prizeSplit:",e)}else Array.isArray(u)&&(m=u)}let p={...Object.keys(n).reduce((e,t)=>{let r=n[t];return e[t]=Array.isArray(r)?r[0]:r,e},{}),prizeSplit:m,images:i},y=await o.Z.create(p);for(let e of(await b.Z.find({type:"announcement",enabled:!0})))await T.Z.create({recipient:e.userId,type:"tournament",title:`New Tournament ${y.name} has been created`,relatedId:y._id,status:"accepted"});let g=new Date(y.date),[f,S]=y.time.split(":").map(Number);g.setHours(f,S,0);let h=(0,l.Bt)(g);console.log("start",h),c().schedule(h,async()=>{console.log("Cron job is running at:",new Date().toLocaleString());try{await o.Z.findByIdAndUpdate(y._id,{status:"ongoing"}),a(y._id,"beforeTournamentScore"),console.log(`Tournament ${y._id} status updated to ongoing`)}catch(e){console.error(`Error updating tournament ${y._id} status:`,e)}});let w=new Date(y.date),[q,I]=y.end.split(":").map(Number);w.setHours(q,I,0);let j=(0,l.Bt)(w);return c().schedule(j,async()=>{console.log("Cron job is ending at:",new Date().toLocaleString());try{await o.Z.findByIdAndUpdate(y._id,{status:"completed"}),a(y._id,"afterTournamentScore")}catch(e){console.error(`Error updating tournament ${y._id} status:`,e)}}),t.status(201).json({success:!0,data:y})}catch(e){return console.error("Tournament creation error:",e),t.status(400).json({success:!1,message:e.message||"Error creating tournament",details:e.errors||e.message})}else if("GET"===e.method){let{filter:r,userId:a}=e.query,n=new(u()).Types.ObjectId(Array.isArray(a)?a[0]:a);try{if("my"===r&&n){let e=await s.Z.aggregate([{$lookup:{from:"teams",localField:"team",foreignField:"_id",as:"teamData"}},{$unwind:"$teamData"},{$match:{$or:[{organizer:n},{$and:[{"teamData.members":n}]}]}},{$lookup:{from:"tournaments",localField:"tournament",foreignField:"_id",as:"tournamentData"}},{$unwind:"$tournamentData"},{$project:{_id:1,tournament:"$tournamentData",team:"$teamData",memberPayments:1,organizer:1,paymentStatus:1,createdAt:1}}]);return t.status(200).json({success:!0,data:e,count:e.length})}{let r=[];if("User"==e.user.role){let t=new(u()).Types.ObjectId(e.user.id);r=await o.Z.find({status:"Registration Open"}).lean();let a=(await s.Z.aggregate([{$lookup:{from:"teams",localField:"team",foreignField:"_id",as:"teamData"}},{$unwind:"$teamData"},{$match:{$or:[{organizer:t},{$and:[{"teamData.members":t}]}]}},{$project:{_id:1,tournament:1}}])).map(e=>e.tournament.toString());console.log("registeredTournamentIds",a),r=r.filter(e=>!a.includes(e._id.toString()))}else r=await o.Z.find().lean();return t.status(200).json({success:!0,data:r})}}catch(e){return t.status(500).json({success:!1,message:e.message})}}else if("DELETE"===e.method){let{id:r}=e.query,a=await o.Z.findByIdAndDelete(r);if(!a)return t.status(404).json({success:!1,message:"Tournament not found"});return t.status(200).json({success:!0,data:a})}else if("PUT"===e.method){let{id:r}=e.query,a=await o.Z.findByIdAndUpdate(r,e.body,{new:!0});if(!a)return t.status(404).json({success:!1,message:"Tournament not found"});return t.status(200).json({success:!0,data:a})}return t.status(405).json({success:!1,message:"Method not allowed"})}catch(e){return t.status(500).json({success:!1,message:"Database connection failed"})}});a()}catch(e){a(e)}})},40644:(e,t,r)=>{r.d(t,{Bt:()=>a}),require("moment");let a=e=>{let t=new Date(e);return`${t.getSeconds()} ${t.getMinutes()} ${t.getHours()} ${t.getDate()} ${t.getMonth()+1} ${t.getDay()}`}},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=38118);module.exports=r})();